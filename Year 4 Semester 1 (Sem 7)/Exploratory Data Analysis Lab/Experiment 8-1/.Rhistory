z.scores = (data - mean.data) / std.data
# outliers have -3 < z.score < 3
outliers = data[abs(z.scores) > 3]
z.scores
# z score method
data = c(-100, 10, 12, 12, 13, 12, 11, 14, 13, 15, 100)
mean.data = mean(data)
std.data = sd(data)
z.scores = (data - mean.data) / std.data
# outliers have -3 < z.score < 3
outliers = data[abs(z.scores) > 3]
z.scores
# z score method
data = c(10, 10, 11, 11, 12, 12, 13, 12, 11, 14, 13, 15, 100)
mean.data = mean(data)
std.data = sd(data)
z.scores = (data - mean.data) / std.data
# outliers have -3 < z.score < 3
outliers = data[abs(z.scores) > 3]
z.scores
# inter quartile range method
data = c(10, 10, 11, 11, 12, 12, 13, 12, 11, 14, 13, 15, 100)
q1 = quantile(data, 0.25)
q3 = quantile(data, 1.5)
q3 = quantile(data, 0.75)
iqr = q3 - q1
# outliers lie outside of the inter quartile range
outliers <- data[data < lower_bound | data > upper_bound]
# outliers lie outside of the inter quartile range
outliers <- data[data < q1 | data > q3]
outliers
outliers
# boxplot method (purely visualisation)
data = c(10, 10, 11, 11, 12, 12, 13, 12, 11, 14, 13, 15, 100)
boxplot()
boxplot(data)
# z score method
data = c(10, 10, 11, 11, 12, 12, 13, 12, 11, 14, 13, 15, 100)
mean.data = mean(data)
std.data = sd(data)
z.scores = (data - mean.data) / std.data
# outliers have -3 < z.score < 3
outliers = data[abs(z.scores) > 3]
outliers
# inter quartile range method
data = c(10, 10, 11, 11, 12, 12, 13, 12, 11, 14, 13, 15, 100)
q1 = quantile(data, 0.25)
q3 = quantile(data, 0.75)
iqr = q3 - q1
# outliers lie outside of the inter quartile range
outliers <- data[data < q1 | data > q3]
outliers
source("~/College Work/Year 4 Semester 1 (Sem 7)/Exploratory Data Analysis Lab/Experiment 7/experiment7.R")
# experiment 6 items
cov(data$Sepal.Length, data$Sepal.Width)
cor(data$Sepal.Length, data$Sepal.Width)
# experiment 7 items
# z score method
data = iris$Sepal.Length
mean.data = mean(data)
std.data = sd(data)
z.scores = (data - mean.data) / std.data
# outliers have -3 < z.score < 3
outliers = data[abs(z.scores) > 3]
outliers
# inter quartile range method
data = iris$Sepal.Length
q1 = quantile(data, 0.25)
q3 = quantile(data, 0.75)
iqr = q3 - q1
# outliers lie outside of the inter quartile range
outliers <- data[data < q1 | data > q3]
outliers
# inter quartile range method
data = iris$Sepal.Length
q1 = quantile(data, 0.25)
q3 = quantile(data, 0.75)
iqr = q3 - q1
# outliers lie outside of the inter quartile range
outliers <- data[data < q1 | data > q3]
outliers
# boxplot method (purely visualisation)
data = iris$Sepal.Length
boxplot(data)
install.packages("summarytools")
library(ggplot2)
library(summarytools)
install.packages("XQuartz")
library(summarytools)
library(summarytools)
dfSummary(data)
# summarising the data
summary(data)
# performing exploratory data analysis with mtcars
data = mtcars
# viewing data structure and dimensions
str(data)
dim(data)
# summarising the data
summary(data)
dfSummary(data)
# missing data checking
sum(is.na(data))
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "blue", color = "black") +
theme_minimal() +
labs(title = "Distribution of Miles per Gallon (mpg)")
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "blue", color = "black") +
labs(title = "Distribution of Miles per Gallon (mpg)")
theme_minimal() +
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "blue", color = "black") +
labs(title = "Distribution of Miles per Gallon (mpg)")
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "blue", color = "black")
ggplot(data, (aes = cyl)) +
geom_bar()
data$cyl = as.factor(data$cyl)
ggplot(data, (aes = cyl)) +
geom_bar()
ggplot(data, aes(x = cyl)) +
geom_bar()
ggplot(data, aes(x = cyl)) +
geom_bar(fill = "gree")
ggplot(data, aes(x = cyl)) +
geom_bar(fill = "green")
ggplot(data, aes(x = cyl)) +
geom_bar(fill = "red")
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "red", color = "black")
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "cyan", color = "black")
ggplot(data, aes(x = cyl)) +
geom_bar(fill = "cyan")
# univariate analysis
ggplot(data, aes(x = mpg)) +
geom_histogram(binwidth = 2, fill = "purple", color = "black")
# univariate analysis
ggplot(data, aes(x=mpg)) +
geom_histogram(binwidth=2, fill="purple", color="black")
data$cyl = as.factor(data$cyl)
ggplot(data, aes(x=cyl)) +
geom_bar(fill="purple", color="black")
ggplot(data, aes(x=gear)) +
geom_bar(fill="purple", color="black")
# univariate analysis
ggplot(data, aes(x=mpg)) +
geom_histogram(binwidth=2, color="black")
# univariate analysis
ggplot(data, aes(x=mpg)) +
geom_histogram(binwidth=2, fill="#8853ba", color="black")
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=5, fill="#8853ba", color="black")
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=2, fill="#8853ba", color="black")
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=10, fill="#8853ba", color="black")
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=20, fill="#8853ba", color="black")
# univariate analysis
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=20, fill="#cebae6", color="black")
data$cyl = as.factor(data$cyl)
ggplot(data, aes(x=cyl)) +
geom_bar(fill="#cebae6", color="black")
data$gear = as.factor(data$gear)
ggplot(data, aes(x=gear)) +
geom_bar(fill="#cebae6", color="black")
ggplot(data, aes(x=gear)) +
geom_pie(fill="#cebae6", color="black")
pie(data$gear)
# performing exploratory data analysis with mtcars
data = mtcars
# viewing data structure and dimensions
str(data)
dim(data)
# summarising the data
summary(data)
# missing data checking
sum(is.na(data))
# univariate analysis
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=20, fill="#cebae6", color="black")
data$cyl = as.factor(data$cyl)
ggplot(data, aes(x=cyl)) +
geom_bar(fill="#cebae6", color="black")
pie(data$gear)
library(dplyr)
library(ggplot2)
library(summarytools)
# performing exploratory data analysis with mtcars
data = mtcars
# viewing data structure and dimensions
str(data)
dim(data)
# summarising the data
summary(data)
# missing data checking
sum(is.na(data))
# univariate analysis
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=20, fill="#cebae6", color="black")
pie(data$cyl)
pie(as.factor(data$cyl))
cyl_counts <- as.data.frame(table(data$cyl))
colnames(cyl_counts) <- c("Cylinders", "Count")
cyl_counts <- as.data.frame(table(data$cyl))
colnames(cyl_counts) <- c("Cylinders", "Count")
ggplot(cyl_counts, aes(x="", y=Count, fill=Cylinders)) +
geom_bar(stat="identity", width=1)
ggplot(cyl_counts, aes(x="", y=Count, fill=Cylinders)) +
geom_bar(stat="identity", width=1) +
coord_polar(theta = "y")
ggplot(cyl_counts, aes(x="", y=Count, fill=Cylinders)) +
geom_bar(stat="identity", width=1) +
coord_polar(theta = "y") +
theme_void()
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point(color="#cebae6") +
theme_minimal()
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point() +
theme_minimal()
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point(fill="purple") +
theme_minimal()
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point(fill="purple") +
theme_minimal()
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point(color="purple") +
theme_minimal()
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_boxplot() +
theme_minimal() +
labs(title = "MPG by Number of Cylinders")
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_boxplot() +
theme_minimal()
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_boxplot() +
theme_minimal()
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_boxplot() +
theme_minimal()
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_point()
# multivariate analysis
data$cyl <- as.factor(data$cyl)
data$gear <- as.factor(data$gear)
data$gear = as.factor(data$gear)
ggplot(data, aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 3, alpha = 0.7) +
scale_color_gradient(low = "blue", high = "red") +
facet_grid(cyl ~ gear) +  # Facet by number of cylinders (rows) and number of gears (columns)
labs(
title = "Miles per Gallon vs. Weight Faceted by Cylinders and Gears",
x = "Weight (1000 lbs)",
y = "Miles per Gallon",
color = "Horsepower"
) +
theme_minimal()
ggplot(data, aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 3, alpha = 0.7) +
scale_color_gradient(low = "blue", high = "red") +
facet_grid(cyl ~ gear) +  # Facet by number of cylinders (rows) and number of gears (columns)
theme_minimal()
ggplot(data, aes(x = wt, y = mpg, color = hp)) +
geom_point(size = 3, alpha = 0.7) +
scale_color_gradient(low = "#cebae6", high = "red") +
facet_grid(cyl ~ gear) +  # Facet by number of cylinders (rows) and number of gears (columns)
theme_minimal()
ggplot(data, aes(x = wt, y = mpg, color = hp)) +
geom_point(size=3) +
scale_color_gradient(low = "blue", high = "red") +
facet_grid(cyl~gear) +
theme_minimal()
ggplot(data, aes(x = wt, y = mpg, color = hp)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red") +
facet_grid(cyl~gear) +
theme_minimal()
ggplot(data, aes(x=wt, y=mpg, color=hp)) +
geom_point() +
scale_color_gradient(low = "blue", high = "red") +
facet_grid(cyl~gear) +
theme_minimal()
# correlation analysis
cor_matrix <- cor(data %>% select_if(is.numeric))
# correlation analysis
cor_matrix <- cor(data)
# correlation analysis
cor_matrix = cor(data %>% select_if(is.numeric))
data
library(corrplot)
install.packages("corrplot")
library(corrplot)
corrplot(cor_matrix)
corrplot(cor_matrix, method="square")
corrplot(cor_matrix, method="triangle")
corrplot(cor_matrix, method="number")
corrplot(cor_matrix, method="circl")
corrplot(cor_matrix, method="pie")
corrplot(cor_matrix)
# outlier detection
ggplot(data, aes(y=mpg)) +
geom_boxplot(fill="orange") +
theme_minimal()
# outlier detection
ggplot(data, aes(y=mpg)) +
geom_boxplot(fill="#cebae6") +
theme_minimal()
library(dplyr)
library(ggplot2)
library(summarytools)
library(dplyr)
library(ggplot2)
library(corrplot)
# performing exploratory data analysis with mtcars
data = mtcars
# viewing data structure and dimensions
str(data)
dim(data)
# summarising the data
summary(data)
# missing data checking
sum(is.na(data))
# outlier detection
ggplot(data, aes(y=mpg)) +
geom_boxplot(fill="#cebae6") +
theme_minimal()
# univariate analysis
ggplot(data, aes(x=hp)) +
geom_histogram(binwidth=20, fill="#cebae6", color="black")
# univariate analysis
cyl_counts <- as.data.frame(table(data$cyl))
colnames(cyl_counts) <- c("Cylinders", "Count")
ggplot(cyl_counts, aes(x="", y=Count, fill=Cylinders)) +
geom_bar(stat="identity", width=1) +
coord_polar(theta = "y") +
theme_void()
data$gear = as.factor(data$gear)
ggplot(data, aes(x=gear)) +
geom_bar(fill="#cebae6", color="black")
# bivariate analysis
ggplot(data, aes(x=hp, y=mpg)) +
geom_point(color="purple") +
theme_minimal()
ggplot(data, aes(x=cyl, y=mpg, fill=cyl)) +
geom_point()
# multivariate analysis
data$cyl = as.factor(data$cyl)
data$gear = as.factor(data$gear)
ggplot(data, aes(x=wt, y=mpg, color=hp)) +
geom_point() +
scale_color_gradient(low="blue", high="red") +
facet_grid(cyl~gear) +
theme_minimal()
# correlation analysis
cor_matrix = cor(data %>% select_if(is.numeric))
corrplot(cor_matrix)
setwd("/Users/abhi/College Work/Year 4 Semester 1 (Sem 7)/Exploratory Data Analysis Lab/Experiment8-1")
getwd()
setwd("~/College Work/Year 4 Semester 1 (Sem 7)/Exploratory Data Analysis Lab/Experiment 8-1")
data = read.csv("mtcars.csv")
data
library(psych)
install.packages("psych")
install.packages("moments")
library(psych)
library(moments)
library(ggplot2)
# means
mean(data)
# means
mean(data$cyl)
# means
mean(data$hp)
# geometric mean
exp(mean(log(data$hp)))
# harmonic mean
1 / mean(1 / data$hp)
# median
median(data$hp)
# quartiles
quantile(data$hp)
# inter quantile range
quantile(data$hp, 0.25)
# inter quantile range
quantile(data$hp)["25%"]
# inter quantile range
quantile(data$hp, 0.75) - quantile(data$hp, 0.25)
# deciles
quantile(data, probs = seq(.1, .9, by = .1))
# deciles
quantile(data$hp, probs = seq(.1, .9, by = .1))
# deciles
quantile(data$hp, probs = seq(.1, 1, by = .1))
# percentiles
quantile(data$hp, probs = seq(.01, 1, by = .01))
# 2. measures of dispersion
# range
max(data$hp) - min(data$hp)
# inter decile range
quantile(data$hp, probs = seq(.1, 1, by = .1))
# inter decile range
quantile(data$hp, probs = seq(.1, 1, by = .1)) - quantile(data$hp, probs = seq(.1, 1, by = .1))["10%"]
# inter decile range
quantile(data$hp, probs = seq(.1, 1, by = .1))["90%"] - quantile(data$hp, probs = seq(.1, 1, by = .1))["10%"]
# mean absolute deviation
mad(data$hp)
# standard deviation
std(data$hp)
# standard deviation
sd(data$hp)
# skewness
skewness(data$hp)
# kurtosis
kurtosis(data$hp)
# 3. frequency distributions with plots
hist(data$hp)
# 3. frequency distributions with plots
# frequency distribution
table(cut(mtcars$mpg, breaks = 5))
# 3. frequency distributions with plots
# frequency distribution
table(cut(mtcars$hp, breaks = 5))
# 3. frequency distributions with plots
# frequency distribution
cut(mtcars$hp, breaks = 5)
# 3. frequency distributions with plots
# frequency distribution
table(cut(mtcars$hp, breaks = 5))
# relative frequency distribution
prop.table(table(cut(mtcars$hp, breaks = 5)))
plot(table(cut(mtcars$hp, breaks = 5)))
hist(table(cut(mtcars$hp, breaks = 5)))
# cumulative frequency distribution
cumsum(table(cut(data$hp, breaks = 5)))
cut(mtcars$hp, breaks = 5)
# 4. plots from the categorical variable
table(data$cyl)
# 4. plots from the categorical variable
pie(table(data$cyl))
# 4. plots from the categorical variable
pie(table(data$cyl), col = rainbow(3))
# 4. plots from the categorical variable
pie(table(data$cyl))
# stacked bar plot
barplot(table(mtcars$cyl))
plot(ecdf(mtcars$mpg), main = "Cumulative Frequency Distribution of MPG", xlab = "MPG", ylab = "Cumulative Frequency")
setwd("~/College Work/Year 4 Semester 1 (Sem 7)/Exploratory Data Analysis Lab/Experiment 8-1")
data = read.csv("mtcars.csv")
library(psych)
library(moments)
library(ggplot2)
# 1. measures of central tendency
# arithmetic mean
mean(data$hp)
# geometric mean
exp(mean(log(data$hp)))
# harmonic mean
1 / mean(1 / data$hp)
# median
median(data$hp)
# quantiles
quantile(data$hp)
# deciles
quantile(data$hp, probs = seq(.1, 1, by = .1))
# percentiles
quantile(data$hp, probs = seq(.01, 1, by = .01))
# 2. measures of dispersion
# range
max(data$hp) - min(data$hp)
# inter quantile range
quantile(data$hp, 0.75) - quantile(data$hp, 0.25)
# inter decile range
quantile(data$hp, probs = seq(.1, 1, by = .1))["90%"] - quantile(data$hp, probs = seq(.1, 1, by = .1))["10%"]
# mean absolute deviation
mad(data$hp)
# standard deviation
sd(data$hp)
# skewness
skewness(data$hp)
# kurtosis
kurtosis(data$hp)
# 3. frequency distributions with plots
# frequency distribution
table(cut(mtcars$hp, breaks = 5))
# histogram
hist(data$hp)
# relative frequency distribution
prop.table(table(cut(mtcars$hp, breaks = 5)))
# cumulative frequency distribution
cumsum(table(cut(data$hp, breaks = 5)))
# 4. plots from the categorical variable
# pie chart
pie(table(data$cyl))
# bar plot
barplot(table(mtcars$cyl))
