library(backports)
library(base64enc)
library(boot)
library(xlsx)
install.packages("xlsx")
library(utf8)
library(dplyr)
install.packages("readr")
library('readr')
data = read.text('../Social Media Data/_chat/txt')
data = readr.text('../Social Media Data/_chat/txt')
install.packages("ggplot2")
getOption('timeout')
options(timeout=300)
library('ggplot2')
install.packages("ggplot2")
install.packages("ggplot2")
install.packages('lubridate')
install.packages('ggplot2')
library('ggplot2')
install.packages('lubridate')
library('lubridate')
install.packages('scales')
library('scales')
install.packages('reshape2')
library('reshape2')
install.packages('tm')
library('tm')
install.packages('SnowballC')
library('SnowballC')
install.packages('wordcloud')
library('wordcloud')
install.packages('RColorBrewer')
library('RColorBrewer')
install.packages('stringr')
library('stringr')
install.packages('syuzhet')
library('syuzhet')
install.packages('dplyr')
library('dplyr')
install.packages("scales")
install.packages("RColorBrewer")
install.packages("stringr")
install.packages("stringr")
install.packages("RColorBrewer")
data = readLines('../Social Media Data/_chat/txt')
open
source("~/College Work/Year 3 Semester 2 (Sem 6)/Programming for Data Science Lab/Whatsapp Data/Untitled.R")
data = readLines('../_chat.txt')
data = readLines('./_chat.txt')
data = readLines('/Users/abhi/College Work/Year 3 Semester 2 (Sem 6)/Programming for Data Science Lab/Whatsapp Data/_chat.txt')
docs = Corpus(VectorSource(data))
Corpus
Corpus
install.packages("corpustools")
docs = Corpus(VectorSource(data))
library('corpustools')
docs = Corpus(VectorSource(data))
vec = c(1, 2, TRUE)
vec
vec = c(1, 2, TRUE, "a")
vec
vec
vec = seq(1, 2, 3, 4)
vec = seq(1:10)
vec
vec = seq(1:10, length.out = 20)
vec = seq(from = 1, length.out = 20)
vec
vec = seq(from = 1, to = 10, length.out = 20)
vec
vec = seq(from = 0, to = 10, length.out = 20)
vec
vec = seq(from = 0, to = 9, length.out = 20)
vec
vec = seq(from = 0, to = 9, length.out = 10)
vec
vec = seq(from = 0, to = 9, length.out = 20)
vec
vec = seq(from = 0, to = 9, length.out = 20, by = 1)
vec = seq(from = 0, to = 9, by = 1)
vec
vec = seq(from = 0, to = 9, by = 10)
vec
as.integer("a")
vec = c(1, 2, TRUE, "a")
vec
as.integer(vec)
as.numeric(vec)
as.logical(vec)
as.character(vec)
as.list(vec)
rand_func = function (x) {
return(x * 2)
}
lapply(vec, rand_function)
lapply(vec, rand_func)
vec = c(1, 2, 3, 4)
lapply(vec, rand_func)
mapply(vec, rand_func)
vec = c(1, 2, 3, 4)
vec
as.integer(vec)
as.list(vec)
rand_func = function (x) {
return(x * 2)
}
mapply(vec, rand_func)
sapply(vec, rand_func)
sapply(vec, rand_func)
lapply(vec, rand_func)
seq(from = 1, length.out = 10)
seq(from = 1, length.out = 10, by = 2)
seq(from = 1, length.out = 10, by = 2, to = 4)
seq(along.with = 1)
seq(along.with = 1, 2)
seq(along.with = 2)
seq(along.with = c(1, 2, 3)
seq(along.with = c(1, 2, 3)
seq(along.with = c(1, 2, 3))
storms
storms = dplyr::storms
dplyr::top_n(storms, 2, day)
dplyr::summarise()
dplyr::summarise(storms)
dplyr::mutate(storms)
dplyr::top_n(storms, 2, day)
top_n
dplyr::top_n
dplyr::top_n()
dplyr::mutate(storms)
dplyr::mutate(storms, group = year)
dplyr::mutate(storms, group = year, by = year + 1)
dplyr::mutate(storms, century = (year % 100) + 1)
mutate(storms, century = (year % 100) + 1)
storms %>% mutate(century = (year % 100) + 1)
install.packages("magrittr")
install.packages("magrittr")
library("magrittr")
install.packages("magrittr")
install.packages("magrittr")
library("magrittr")
storms %>% mutate(century = (year % 100) + 1)
data %>% mutate(root_sepal_width = sqrt(Sepal.Width))
library("tidyverse")
install.packages("dplyr")
library("dplyr")
install.packages("XQuartz")
install.packages("dplyr")
library(tidyverse)
data %>% mutate(root_sepal_width = sqrt(Sepal.Width))
data = data.frame(
id = c(10,11,12,13),
name = c('sai','ram','deepika','sahithi'),
gender = c('M','M','F','F'),
dob = as.Date(c('1990-10-02','1981-3-24','1987-6-14','1985-8-16')),
state = c('HYD','VIZAG','TIRUPATI',NA),
row.names=c('r1','r2','r3','r4')
)
data
data %>% select(2, 3)
data %>% select(2:4)
data %>% select(-c(1, 2))
data %>% select(-c("id", "name"))
data %>% select(starts_with("gen"))
data %>% select(ends_with("e"))
data %>% mutate(root_sepal_width = sqrt(Sepal.Width))
iris %>% mutate(root_sepal_width = sqrt(Sepal.Width))
storms %>% mutate(century = (year % 100) + 1)
storms = dplyr::storms
dplyr::top_n(storms, 2, day)
class(iris)
class(storms)
storms[0]
storms[1]
storms[["year"]]
storms[["year"]] %>% mutate(century = (year % 100) + 1)
iris = iris
View(storms)
View(iris)
vit.final
vit.data <- data.frame(
student_id = c (1:5),
student_name = c("Arick","Donan","Michelle","Ritchie","Gary"),
cgpa = c(6.3,5.2,6.0,7.0,8.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11", "2015-03-27")),
stringsAsFactors = FALSE
)
vit.data
str(vit.data)
summary(vit.data)
vit.data[1:2,]
data.frame(vit.data$student_name, vit.data$student_id)
vit.newdata <- data.frame(
student_id = c(6:8),
student_name = c("Rasmi","Pranab","Tusar"),
cgpa = c(5.0,7.5,6.8),
start_date = as.Date(c("2013-05-21","2013-07-30","2014-06-17")),
stringsAsFactors = FALSE
)
vit.final = rbind(vit.data, vit.newdata)
vit.final
vit.final %>% mutate(double_cgpa = cgpa * 2)
storms %>% mutate(century = (year / 100) + 1)
a % 4
3 % 4
storms %>% mutate(century = (year mod 100) + 1)
storms %>% mutate(century = (year %% 100) + 1)
storms %>% mutate(century = (year / 100) + 1)
storms %>% mutate(century = as.integer(year / 100) + 1)
storms %>% arrange(by = day)
storms %>% arrange(by_group = day)
storms %>% arrange(from = day)
storms %>% arrange(group_by = day)
storms %>% arrange(group_by = day)
storms %>% arrange(by_group = day)
storms %>% arrange(by_group = hour)
install.packages("XML")
library("XML")
data = xmlToList(res)
res = xmlParse(file = "")
data = xmlToList(res)
install.packages("dplyr")
install.packages("dplyr")
library("dplyr")
storms = dplyr::storms
dplyr::mutate(storms, century = as.integer(year / 100) + 1)
storms %>% mutate(century = as.integer(year / 100) + 1)
install.packages("dplyr")
library("dplyr")
storms = dplyr::storms
dplyr::mutate(storms, century = as.integer(year / 100) + 1)
storms %>% mutate(century = as.integer(year / 100) + 1)
storms %>% dplyr::mutate(century = as.integer(year / 100) + 1)
install.packages("tidyverse")
library("tidyverse")
install.packages("dplyr")
library("dplyr")
install.packages("XQuartz")
dplyr::tbl_df(iris)
utils::View(iris)
install.packages("dplyr")
data = data.frame(
id = c(10,11,12,13),
name = c('sai','ram','deepika','sahithi'),
gender = c('M','M','F','F'),
dob = as.Date(c('1990-10-02','1981-3-24','1987-6-14','1985-8-16')),
state = c('HYD','VIZAG','TIRUPATI',NA),
row.names=c('r1','r2','r3','r4')
)
data
data %>% select(2, 3)
install.packages("magrittr")
library("magrittr")
data = data.frame(
id = c(10,11,12,13),
name = c('sai','ram','deepika','sahithi'),
gender = c('M','M','F','F'),
dob = as.Date(c('1990-10-02','1981-3-24','1987-6-14','1985-8-16')),
state = c('HYD','VIZAG','TIRUPATI',NA),
row.names=c('r1','r2','r3','r4')
)
data
data %>% select(2, 3)
data %>% select(2, 3)
library("dplyr")
data %>% select(2, 3)
data %>% select(2:4)
data %>% select(-c(1, 2))
data %>% select(-c("id", "name"))
data %>% select(starts_with("gen"))
data %>% select(ends_with("e"))
vit.data <- data.frame(
student_id = c (1:5),
student_name = c("Arick","Donan","Michelle","Ritchie","Gary"),
cgpa = c(6.3,5.2,6.0,7.0,8.25),
start_date = as.Date(c("2012-01-01", "2013-09-23", "2014-11-15", "2014-05-11", "2015-03-27")),
stringsAsFactors = FALSE
)
vit.data
str(vit.data)
summary(vit.data)
vit.data[1:2,]
data.frame(vit.data$student_name, vit.data$student_id)
vit.newdata <- data.frame(
student_id = c(6:8),
student_name = c("Rasmi","Pranab","Tusar"),
cgpa = c(5.0,7.5,6.8),
start_date = as.Date(c("2013-05-21","2013-07-30","2014-06-17")),
stringsAsFactors = FALSE
)
vit.final = rbind(vit.data, vit.newdata)
vit.final
iris %>% mutate(root_sepal_width = sqrt(Sepal.Width))
storms %>% mutate(century = as.integer(year / 100) + 1)
storms %>% arrange(by_group = hour)
vit
vit.data
vec = c(1, 2, 3)
len(vec)
length(vec)
for (i in 1:length(vec)){
print(i)
}
vec = c(2, 2, 3)
length(vec)
for (i in 1:length(vec)){
print(i)
}
vec = c(2, 2, 3)
length(vec)
for (i in 1:length(vec)){
print(vec[i])
}
print("HI")
if(length(vec) >= 3) {
print("HI")
}
if(length(vec) >= 3) {
print("hi")
} else {
print("bye")
}
vec = (1, 2)
vec = c(1, 2)
if(length(vec) >= 3) {
print("hi")
} else {
print("bye")
}
if(length(vec) >= 3) {
print("hi")
}
else {
if(length(vec) >= 3) {
print("hi")
} else {
print("bye")
}
class(I)
class(i)
a = 5
class(a)
a = 5L
class(a)
L
a = 3.4L
log(e)
log(E)
log(4)
log(10)
log10(10)
log3(10)
log10(10)
setwd("/Users/abhi/College Work/Year 3 Semester 2 (Sem 6)/Programming for Data Science Lab")
load("/Users/abhi/College Work/Year 3 Semester 2 (Sem 6)/Programming for Data Science Lab/Data Mining/titanic.raw.rdata")
load("/Users/abhi/College Work/Year 3 Semester 2 (Sem 6)/Programming for Data Science Lab/Data Mining/termDocMatrix.rdata")
View(termDocMatrix)
utils::View(titanic.raw)
install.packages("XQuartz")
View(titanic.raw)
View(titanic.raw)
library("dplyr")
dplyr::filter(titanic.raw, Class == 1)
View(titanic.raw)
View(titanic.raw)
View(titanic.raw)
dplyr::filter(titanic.raw, Class == "3rd")
dplyr::filter(titanic.raw, Class == "3rd" && )
dplyr::filter(titanic.raw, Class == "3rd" && TRUE)
dplyr::filter(titanic.raw, Class == "3rd" && Survived == "Yes")
dplyr::filter(titanic.raw, Class == "3rd" & Survived == "Yes")
male_adult_survivors = dplyr::filter(titanic.raw, Class == "3rd" & Survived == "Yes")
third_class_survivors= dplyr::filter(titanic.raw, Class == "3rd" & Survived == "Yes")
first_class_survivors = dplyr::filter(titanic.raw, Class == "1st" & Survived == "Yes")
first_class_survivors
third_class_survivors
second_class_survivors
second_class_survivors = dplyr::filter(titanic.raw, Class == "2nd" & Survived == "Yes")
second_class_survivors
third_class_deaths = dplyr::filter(titanic.raw, Class == "3rd" & Survived == "Yes")
third_class_deaths
third_class_deaths = dplyr::filter(titanic.raw, Class == "3rd" & Survived == "No")
third_class_deaths
len(third_class_deaths)
second_class_deaths = dplyr::filter(titanic.raw, Class == "2nd" & Survived == "No")
second_class_deaths
second_class_survivors
first_class_deaths == dplyr::filter(titanic.raw, Class == "1st" & Survived == "No")
first_class_deaths = dplyr::filter(titanic.raw, Class == "1st" & Survived == "No")
first_class_deaths
pie(c(third_class_survivors, third_class_deaths), c("Survivors", "Deaths"), main = "3rd Class")
pie(c(nrow(third_class_survivors), nrow(third_class_deaths), c("Survivors", "Deaths"), main = "3rd Class")
pie(c(nrow(third_class_survivors), nrow(third_class_deaths)), c("Survivors", "Deaths"), main = "3rd Class")
pie(c(nrow(third_class_survivors), nrow(third_class_deaths)), c("Survivors", "Deaths"), main = "3rd Class")
pie(c(nrow(second_class_survivors), nrow(second_class_deaths)), c("Survivors", "Deaths"), main = "2nd Class")
pie(c(nrow(first_class_survivors), nrow(first_class_deaths)), c("Survivors", "Deaths"), main = "1st Class")
titanic
library(titanic)
install.packages(titanic)
library(titanic)
library("titanic")
install.packages("titanic")
library("titanic")
titanic
Titanic
library(party)
library("party")
install.packages(party)
install.packages("party")
options(timeout=1000)
install.packages("party")
